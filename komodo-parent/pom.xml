<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
      <groupId>org.jboss</groupId>
      <artifactId>jboss-parent</artifactId>
      <version>24</version>
      <relativePath></relativePath>
    </parent>

	<modelVersion>4.0.0</modelVersion>
	<groupId>org.teiid.komodo</groupId>
	<artifactId>komodo-parent</artifactId>
	<version>0.0.4-SNAPSHOT</version>
	<name>Komodo Parent</name>

	<url>http://www.jboss.org/teiiddesigner</url>
	<packaging>pom</packaging>
	<description> tool that allows creating, editing and managing dynamic VDBs for the Teiid server.</description>
	<inceptionYear>2013</inceptionYear>

	<organization>
		<name>JBoss, a division of Red Hat</name>
		<url>http://www.jboss.org</url>
	</organization>

	<licenses>
		<license>
			<name>GNU Lesser General Public License</name>
			<url>http://repository.jboss.org/licenses/lgpl-2.1.txt</url>
			<!--url>http://www.gnu.org/licenses/lgpl.html</url -->
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>

	<scm>
		<connection>scm:git:git://github.com/Teiid-Designer/komodo.git</connection>
		<developerConnection>scm:git:git@github.com:Teiid-Designer/komodo.git</developerConnection>
		<url>http://github.com/Teiid-Designer/komodo</url>
	</scm>

	<issueManagement>
		<system>jira</system>
		<url>http://issues.jboss.org/browse/TEIIDDES</url>
	</issueManagement>

	<developers>
		<developer>
			<name>Barry Lafond</name>
			<id>blafond</id>
			<email>blafond@redhat.com</email>
			<organization>JBoss, a division of Red Hat</organization>
			<roles>
				<role>Project Lead</role>
				<role>Developer</role>
			</roles>
			<timezone>-6</timezone>
		</developer>
		<developer>
			<name>Dan Florian</name>
			<id>danflo</id>
			<email>dflorian@redhat.com</email>
			<organization>JBoss, a division of Red Hat</organization>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>-6</timezone>
		</developer>
		<developer>
			<name>Paul Richardson</name>
			<id>phantomjinx</id>
			<email>p.g.richardson@redhat.com</email>
			<organization>JBoss, a division of Red Hat</organization>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>0</timezone>
		</developer>
		<developer>
			<name>Mark Drilling</name>
			<id>mdrilling</id>
			<email>mdrillin@redhat.com</email>
			<organization>JBoss, a division of Red Hat</organization>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>-6</timezone>
		</developer>
		<developer>
			<name>Ted Jones</name>
			<id>tejones</id>
			<email>tejones@redhat.com</email>
			<organization>JBoss, a division of Red Hat</organization>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>-6</timezone>
		</developer>
	</developers>

	<contributors>
	</contributors>

	<properties>

		<version.ip-bom>6.0.1.Final</version.ip-bom>
		<version.org.wildfly>11.0.0.Final</version.org.wildfly>
		<version.org.wildfly.core>3.0.1.Final</version.org.wildfly.core>
		<!-- Override to stop infinispan-core upgrading to non-compatible version -->
		<version.org.jgroups>3.6.13.Final</version.org.jgroups>

		<version.commons.io>2.5</version.commons.io>
		<version.infinispan>8.2.8.Final</version.infinispan>
		
		<version.org.teiid>10.0.0.CR2</version.org.teiid>

		<!-- Instruct the build to use only UTF-8 encoding for source code -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<debug.argline />

		<!-- overriding the BOM 1.6 source/target -->
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>

		<!--Skip long running tests by default -->
		<skipLongRunningTests>true</skipLongRunningTests>

		<!-- PLUGIN BUG: Test dependencies not correctly checked -->
		<managed-deps.checkProfiles>false</managed-deps.checkProfiles>

		<!-- The version of jgit -->
		<version.jgit>[4.3.0,4.4.0)</version.jgit>

		<server.platform>wildfly</server.platform>

		<!-- The default version of teiid targeted for development -->
		<teiid.classifier.default>wildfly-dist</teiid.classifier.default>

		<!-- The version of server to use with testing -->
		<test.server.group.id>org.wildfly</test.server.group.id>
		<test.server.artifact.id>wildfly-dist</test.server.artifact.id>
		<test.server.version>10.1.0.Final</test.server.version>
		<!-- The test version of server when its unpacked -->
		<test.server.name>${server.platform}-${test.server.version}</test.server.name>

		<version.wildfly>3.0.1.Final</version.wildfly>

		<version.aesh>0.33.12.redhat-1</version.aesh>
		<version.org.jboss.dmr>1.3.0.Final</version.org.jboss.dmr>

		<version.org.jboss.spec.jboss-javaee-7.0>1.0.4.Final</version.org.jboss.spec.jboss-javaee-7.0>
		<version.org.jboss.xnio>3.5.1.Final</version.org.jboss.xnio>
		<arquillian.container.name>wildfly-managed</arquillian.container.name>
	</properties>

	<!-- This section defines the default dependency settings inherited by child 
		projects. Note that this section does not add dependencies, but rather provide 
		default settings. -->
	<dependencyManagement>
		<dependencies>
			<!-- Import the core parent to get all the managed dependencies from core -->
			<dependency>
				<groupId>org.wildfly.core</groupId>
				<artifactId>wildfly-core-parent</artifactId>
				<type>pom</type>
				<version>${version.org.wildfly.core}</version>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.wildfly</groupId>
				<artifactId>wildfly-parent</artifactId>
				<type>pom</type>
				<version>${version.org.wildfly}</version>
				<scope>import</scope>
			</dependency>
			<!--IP-Platform BOM -->
			<dependency>
				<groupId>org.jboss.integration-platform</groupId>
				<artifactId>jboss-integration-platform-bom</artifactId>
				<version>${version.ip-bom}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.jgroups</groupId>
				<artifactId>jgroups</artifactId>
				<version>${version.org.jgroups}</version>
			</dependency>

			<!-- Required for teiid embedded and teiid translator -->
			<dependency>
				<groupId>org.infinispan</groupId>
				<artifactId>infinispan-core</artifactId>
				<version>${version.infinispan}</version>
			</dependency>

			<dependency>
				<groupId>org.infinispan</groupId>
				<artifactId>infinispan-commons</artifactId>
				<version>${version.infinispan}</version>
			</dependency>
			
			<dependency>
		        <groupId>org.jboss.marshalling</groupId>
		        <artifactId>jboss-marshalling-osgi</artifactId>
		        <version>2.0.0.Final</version>
		    </dependency>

			<!-- Komodo subprojects -->
			<dependency>
				<groupId>org.teiid.komodo</groupId>
				<artifactId>komodo-spi</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.komodo</groupId>
				<artifactId>komodo-utils</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.komodo.plugins</groupId>
				<artifactId>komodo-plugin-framework</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.komodo</groupId>
				<artifactId>komodo-plugin-service</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.komodo</groupId>
				<artifactId>komodo-ui</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.komodo</groupId>
				<artifactId>komodo-utils-logger</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.komodo</groupId>
				<artifactId>komodo-metadata-instance</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.komodo</groupId>
				<artifactId>komodo-core</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.komodo</groupId>
				<artifactId>komodo-modeshape-sequencer-teiid-sql</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.komodo</groupId>
				<artifactId>komodo-vdb</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.komodo</groupId>
				<artifactId>komodo-shell-api</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.komodo</groupId>
				<artifactId>komodo-shell</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.komodo</groupId>
				<artifactId>komodo-importer</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.komodo</groupId>
				<artifactId>komodo-modeshape-vdb</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.komodo</groupId>
				<artifactId>komodo-relational</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.komodo</groupId>
				<artifactId>komodo-relational-commands</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.komodo</groupId>
				<artifactId>komodo-server-rest</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.teiid.komodo</groupId>
				<artifactId>komodo-utils</artifactId>
				<version>${project.version}</version>
				<type>test-jar</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.teiid.komodo</groupId>
				<artifactId>komodo-core</artifactId>
				<version>${project.version}</version>
				<type>test-jar</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.teiid.komodo</groupId>
				<artifactId>komodo-shell</artifactId>
				<version>${project.version}</version>
				<type>test-jar</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.teiid.komodo</groupId>
				<artifactId>komodo-modeshape-sequencer-teiid-sql-tests</artifactId>
				<version>${project.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.teiid.komodo</groupId>
				<artifactId>komodo-integration-utils</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.teiid</groupId>
				<artifactId>teiid-common-core</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid</groupId>
				<artifactId>teiid-api</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid</groupId>
				<artifactId>teiid-engine</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid</groupId>
				<artifactId>teiid-runtime</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid</groupId>
				<artifactId>teiid-admin</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid</groupId>
				<artifactId>teiid-jboss-admin</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid</groupId>
				<artifactId>teiid-client</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.connectors</groupId>
				<artifactId>translator-odata</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid</groupId>
				<artifactId>teiid-olingo-common</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid</groupId>
				<artifactId>teiid-olingo-patches</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.connectors</groupId>
				<artifactId>translator-loopback</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.connectors</groupId>
				<artifactId>translator-solr</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.connectors</groupId>
				<artifactId>translator-accumulo</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.connectors</groupId>
				<artifactId>translator-cassandra</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.connectors</groupId>
				<artifactId>translator-object</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.connectors</groupId>
				<artifactId>translator-ws</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.connectors</groupId>
				<artifactId>translator-salesforce</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.connectors</groupId>
				<artifactId>translator-salesforce-34</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.connectors</groupId>
				<artifactId>connector-salesforce</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.connectors</groupId>
				<artifactId>connector-salesforce-34</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.connectors</groupId>
				<artifactId>translator-jdbc</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid</groupId>
				<artifactId>teiid-hibernate-dialect</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.connectors</groupId>
				<artifactId>google-api</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.connectors</groupId>
				<artifactId>mongodb-api</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.connectors</groupId>
				<artifactId>couchbase-api</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.connectors</groupId>
				<artifactId>simpledb-api</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.connectors</groupId>
				<artifactId>document-api</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.connectors</groupId>
				<artifactId>file-api</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid</groupId>
				<artifactId>saxon-xom</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid</groupId>
				<artifactId>rest-service</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid</groupId>
				<artifactId>teiid-metadata</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>

			<dependency>
				<groupId>org.teiid</groupId>
				<artifactId>teiid-txn-jbossts</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>

			<dependency>
				<groupId>org.teiid.connectors</groupId>
				<artifactId>translator-file</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid.connectors</groupId>
				<artifactId>connector-file</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.teiid</groupId>
				<artifactId>teiid-data-quality</artifactId>
				<version>${version.org.teiid}</version>
			</dependency>

			<!--Inherited from BOM, but changes the default scope to "test" -->
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<version>${version.org.hamcrest}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${version.commons.io}</version>
			</dependency>

			<dependency>
				<groupId>org.wildfly.core</groupId>
				<artifactId>wildfly-cli</artifactId>
				<version>${version.wildfly}</version>
			</dependency>
			<dependency>
				<groupId>org.wildfly.core</groupId>
				<artifactId>wildfly-controller-client</artifactId>
				<version>${version.wildfly}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.xnio</groupId>
				<artifactId>xnio-api</artifactId>
				<version>${version.org.jboss.xnio}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.xnio</groupId>
				<artifactId>xnio-nio</artifactId>
				<version>${version.org.jboss.xnio}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-7.0</artifactId>
				<version>${version.org.jboss.spec.jboss-javaee-7.0}</version>
				<type>pom</type>
				<scope>test</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
	</dependencies>

	<build>
		<!-- This section defines the default plugin settings inherited by child 
			projects. -->
		<pluginManagement>
			<plugins>

				<!-- Specify the compiler options and settings -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<showDeprecation>false</showDeprecation>
						<showWarnings>false</showWarnings>
						<source>${maven.compiler.source}</source>
						<target>${maven.compiler.target}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<!-- Fixes how test resources of a project can be used in projects dependent 
					on it -->
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<extensions>true</extensions>
					<configuration>
						<instructions>
							<Export-Package>org.teiid.komodo.*</Export-Package>
						</instructions>
					</configuration>
				</plugin>

				<!-- Inform m2e to ignore build errors. These errors started occurring 
					after upgrading to Eclipse Indigo (3.7). This issue is discussed/solved here: 
					http://stackoverflow.com/questions/8706017/maven-dependency-plugin-goals-copy-dependencies-unpack-is-not-supported-b -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<!-- copy-dependency plugin -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>

			<!-- Produce source jars during package and test-source jars during the 
				'verify' phase -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
					<execution>
						<id>attach-test-sources</id>
						<goals>
							<goal>test-jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<!-- Manually specify the JUnit provider -->
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<!--artifactId>surefire-junit47</artifactId -->
						<artifactId>surefire-junit4</artifactId>
						<!--artifactId>surefire-junit3</artifactId -->
						<version>${version.surefire.plugin}</version>
					</dependency>
				</dependencies>
				<configuration>
					<systemProperties combine.children="append">
						<property>
							<name>java.io.tmpdir</name>
							<value>${basedir}/target</value>
						</property>
						<property>
							<name>skipLongRunningTests</name>
							<value>${skipLongRunningTests}</value>
						</property>
					</systemProperties>
					<argLine>-Xmx1524M ${debug.argline} -XX:MaxPermSize=256M
						-Djava.awt.headless=true</argLine>
					<useFile>false</useFile>
					<enableAssertions>true</enableAssertions>
				</configuration>
			</plugin>

			<!-- Build a test-jar for each project, so that src/test/* resources and 
				classes can be used in other projects. Also customize how the jar files are 
				assembled. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<id>test-jar</id>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<pushChanges>false</pushChanges>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
